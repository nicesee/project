<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.dao.UserDAO">

    <resultMap id="user" type="UserEntity">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="status" column="status"/>
        <result property="sex" column="sex"/>
        <result property="adress" column="adress"/>
        <result property="phone" column="phone"/>
        <result property="account" column="account"/>
        <result property="password" column="password"/>
        <result property="identity" column="identity"/>
    </resultMap>

    <select id="get" parameterType="map" resultMap="user">
        select * FROM `user` where status = 1

        <if test="sex != null">
            and sex = #{sex}
        </if>
        <if test="name != null">
            and name like '%${name}%'
        </if>

        <if test="start != null and limit != null">
            limit ${start}, ${limit}
        </if>
    </select>

    <select id="getByEntity" parameterType="UserEntity" resultMap="user">
        select * from `user` where account = #{account} and status = 1 and password = #{password}
    </select>

    <select id="get_" parameterType="map" resultMap="user">
        select * FROM `user` where status = 1 and identity = '研究人员'
    </select>

    <select id="getCount" parameterType="map" resultType="int">

    </select>


    <update id="update" parameterType="UserEntity">
        update `user` set `status` = 1 ,`name` = #{name} , `sex` = #{sex}
        <if test="phone != null">
            , `phone` = #{phone}
        </if>
        <if test="adress != null">
            , `adress` = #{adress}
        </if>
        where id = #{id}
    </update>

    <update id="delete" parameterType="UserEntity">
        update `user` set status = 0 where id = #{id}
    </update>

    <insert id="add" parameterType="UserEntity">
        insert into `user` (`name` ,`sex` ,`phone`, `status`, `adress`, `account`, `password`,`identity`)
        values (#{name}, #{sex}, #{phone}, 1, #{adress}, #{account}, #{password}, #{identity})
    </insert>

</mapper>